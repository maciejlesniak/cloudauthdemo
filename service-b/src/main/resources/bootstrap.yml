server:
  port: ${PORT:8091}

management:
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    httptrace:
      enabled: false
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
          - metrics
          - httptrace
          - info
          - prometheus

spring:
  application:
    name: service-b
  security:
    user:
      name: user-b
      password: pass
      roles:
        - SYSTEM
    auth:
      inmemory:
        users:
          - name: sa
            password: "{noop}1234"
            roles:
              - sysRole_admin
              - sysRole_test
              - sysRole-AAccess
          - name: sb
            password: "{noop}4321"
            roles:
              - sysRole_admin
              - sysRole_test
              - sysRole-BAccess
  cloud:
    consul:
      discovery:
        tags: urlprefix-/${spring.application.name} strip=/${spring.application.name} host=dst
        health-check-url: http://${HOST:docker.for.mac.localhost}:${PORT:8091}/actuator/health
      host: ${CONSUL_HOST:docker.for.mac.localhost}
      port: ${CONSUL_PORT:8500}
    circuit:
      breaker:
        enabled: true
    vault:
      token: "RootTokenIdPlaceholder"
      scheme: http
      kv:
        enabled: true
      uri: http://docker.for.mac.localhost:8200

logging:
  level:
    root: INFO
    org.springframework.cloud: DEBUG
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG
    reactor.netty: DEBUG
    pl.sparkidea: DEBUG
